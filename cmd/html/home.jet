<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.css" integrity="sha512-UrjLcAek5jbj1vwGbXkviPHtgSNVNQCedX7cBIMDdSI2iZtUcZcoTh2Sqc8R9mVcijOjFUi1IlxhfrE1uWaIog==" crossorigin="anonymous" referrerpolicy="no-referrer" />  
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
    <style>
        .chatbox{
            outline: 1px solid silver;
            height: 180px;
            padding: 0.5em;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col-mt-3">
                <h1>This is the homepage</h1>
                <hr>
            </div>
        </div>

        <div class="row">
            <div class="col-md-8">
                <h3>Chat</h3>
                <p><a href="https://github.com">Go to github</a></p>
                <div class="form-group">
                    <label for="username">Username:</label>
                    <input type="text" class="form-control" name="username" id="username" autocomplete="off" />
                </div>
                <div class="form-group">
                    <label for="message">Message:</label>
                    <input type="text" class="form-control" name="message" id="message" autocomplete="off" />
                </div>

                <hr>
                <a href="javascript:void(0);" class="btn btn-outline-secondary" id="sendBtn">Send Message</a>

                <input type="hidden" name="action" id="action">

                <hr>
                <div class="chatbox" id="output">
                </div>
            </div>

            <div class="col-md-4">
                <h3>Who's online</h3>

                    <ul id="online_users">
                    
                    </ul>

            </div>
        </div>
    </div>
</body>

<script src="/static/reconnecting-websocket.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/notie/4.3.1/notie.min.js" integrity="sha512-NHRCwRf2LnVSlLDejCA9oS3fG3/FLSQIPCjAWl3M7tVi5wszwr6FxkjotWnQDXLE+aLKcxRrzFDNEgXj9nvkPw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>
<script>
    let socket = null;
    let o = document.getElementById("output");
    let userField = document.getElementById("username");
    let messageField = document.getElementById("message");

    window.onbeforeunload = function() {
        console.log("leaving...");
        let jsonData = {};
        jsonData["action"] = "left";
        socket.send(JSON.stringify(jsonData));
    }

    document.addEventListener("DOMContentLoaded", () => {
        socket = new ReconnectingWebSocket("ws://127.0.0.1:4000/ws", null, {debug: true, reconnectInterval: 3000});

        socket.onopen = () => {
            console.log("succefully connected!!");
        }

        socket.onclose = () => {
            console.log("connection close");
        }

        socket.onerror = err => {
            console.log("there was an error");
        }

        socket.onmessage = msg => {
   

            let data = JSON.parse(msg.data);

            // for testing, uncomment this
            // console.log("Action is", data.action);
            // console.log(msg);
            // let j = JSON.parse(msg.data);
            // console.log(j)

            switch (data.action) {
                case "list_users":
                    let ul = document.getElementById("online_users");
                    while (ul.firstChild) ul.removeChild(ul.firstChild);

                    if (data.connected_users.length > 0) {
                        data.connected_users.forEach((item) => {
                            let li = document.createElement("li");
                            li.appendChild(document.createTextNode(item));
                            ul.appendChild(li);
                        })
                    }
                    break;
                case "broadcast":
                    o.innerHTML = o.innerHTML + data.message + "<br>";
                    break;
                    
            }
        }

        let userInput = document.getElementById("username");
        userInput.addEventListener("change", (event) => {
            let jsonData = {};
            jsonData["action"] = "username";
            jsonData["username"] = event.target.value;
            socket.send(JSON.stringify(jsonData));
        })

        document.getElementById("message").addEventListener("keydown", function(event) {
            if (event.code === "Enter") {
                if (!socket) {
                    console.log("no connection");
                    return false
                }
                cc = emptyCheck()
                if cc === false {
                    sendMessage();
                }
                event.preventDefault();
                event.stopPropagation();
            }
        })

        document.getElementById("sendBtn").addEventListener("click", function() {
        cc = emptyCheck()
                if cc === false {
                    sendMessage();
                }
        })

    })

    // emptyCheck
    function emptyCheck() {
        if ((userField.value === "") || (messageField === "")) {
                errorMessage("fill out user field and message");
                return false
            }
        return true
    }

    function sendMessage() {
        let jsonData = {};
        jsonData["action"] = "broadcast";
        jsonData["username"] = document.getElementById("username").value;
        jsonData["message"] = document.getElementById("message").value;
        socket.send(JSON.stringify(jsonData));
        document.getElementById("message").value = "";
    }

    function errorMessage(msg){
        notie.alert({
            type: 'error',
            text: msg
            })
    }
</script>
</html>